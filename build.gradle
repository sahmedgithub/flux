buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		gradlePluginPortal()
		maven { url "https://repo.spring.io/plugins-release" }
	}
}

plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id "com.google.cloud.tools.jib"
	id "org.sonarqube"
	id "jacoco"
	id "net.ltgt.apt-eclipse"
	id 'checkstyle'
}

checkstyle {
	toolVersion '7.8.1'
	configFile file("${rootDir}/config/checkstyle/checkstyle.xml")
}
checkstyleMain {
	source ='src/main/java'
}
checkstyleTest {
	source ='src/test/java'
}

group = 'com.homedepot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

assert System.properties["java.specification.version"] == "1.8" || "11" || "12" || "13" || "14"

apply from: "gradle/docker.gradle"
apply from: "gradle/sonar.gradle"

if (project.hasProperty("prod")) {
	apply from: "gradle/profile_prod.gradle"
} else {
	apply from: "gradle/profile_dev.gradle"
}

eclipse {
	sourceSets {
		main {
			java {
				srcDirs += ["build/generated/sources/annotationProcessor/java/main"]
			}
		}
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	//implementation 'org.flywaydb:flyway-core'
	compile group: 'org.zalando', name: 'jackson-datatype-problem', version: '0.25.0'
	implementation "org.springframework.security:spring-security-config"
	implementation "org.springframework.security:spring-security-data"
	implementation "org.springframework.security:spring-security-web"
// https://mvnrepository.com/artifact/org.zalando/problem-spring-webflux
	compile group: 'org.zalando', name: 'problem-spring-webflux', version: '0.26.2'



	compile group: 'org.zalando', name: 'problem-violations', version: '0.26.2'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.3.5.RELEASE'

	// https://mvnrepository.com/artifact/com.h2database/h2
	testCompile group: 'com.h2database', name: 'h2', version: '1.3.148'



	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
}

task cleanResources(type: Delete) {
	delete "build/resources"
}

test {
	useJUnitPlatform()
	exclude "**/*IT*", "**/*IntTest*"

	testLogging {
		events 'FAILED', 'SKIPPED'
	}

	reports.html.enabled = false
}

task integrationTest(type: Test) {
	useJUnitPlatform()
	description = "Execute integration tests."
	group = "verification"
	include "**/*IT*", "**/*IntTest*"

	testLogging {
		events 'FAILED', 'SKIPPED'
	}
	reports.html.enabled = false
}



tasks.withType(Checkstyle) {
	reports {
		xml.enabled false
		html.enabled true
		html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
	}
}






